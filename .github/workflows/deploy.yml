name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.15
      - name: Install dependencies
        env:
          HUGEICONS_TOKEN: ${{ secrets.HUGEICONS_TOKEN }}
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build:dashboard
        env:
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          VITE_POSTHOG_KEY: ${{ secrets.VITE_POSTHOG_KEY }}
          VITE_POSTHOG_HOST: ${{ vars.VITE_POSTHOG_HOST }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  migrate:
    name: Migrate Database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.15
      - run: |
          echo "@hugeicons-pro:registry=https://npm.hugeicons.com/" > .npmrc
          echo "//npm.hugeicons.com/:_authToken=${{ secrets.HUGEICONS_TOKEN }}" >> .npmrc
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Migrate Database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: bun run db:migrate

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
      - migrate
    concurrency: deploy-group
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.3.142
      - run: |
          echo "@hugeicons-pro:registry=https://npm.hugeicons.com/" > .npmrc
          echo "//npm.hugeicons.com/:_authToken=${{ secrets.HUGEICONS_TOKEN }}" >> .npmrc

      - run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  notify:
    if: always()
    name: Notify
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Get PR number
        id: pr_number
        uses: bcgov/action-get-pr@v0.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get commit message
        id: get_head_commit_title
        run: |
          if [ ! -z "${{ steps.pr_number.outputs.pr }}" ]; then
            # Get PR title using GitHub API
            PR_TITLE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.pr_number.outputs.pr }}" | jq -r '.title')
            echo "title=$PR_TITLE" >> $GITHUB_OUTPUT
          else
            # Fallback to commit message if not a PR merge
            echo "title=$(git log --format=%B -n 1 HEAD | head -n 1)" >> $GITHUB_OUTPUT
          fi
      - name: "Slack Deploy Success Message"
        uses: slackapi/slack-github-action@v2.1.0
        if: success()
        with:
          webhook: ${{ vars.SLACK_DEPLOY_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":white_check_mark: *Deployment to prod*\nTitle: ${{ steps.get_head_commit_title.outputs.title }}\nAuthor: @${{ github.event.head_commit.author.name }}\nWorkflow run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/>"
      - name: "Slack Deploy Failure Message"
        uses: slackapi/slack-github-action@v2.1.0
        if: failure()
        with:
          webhook: ${{ vars.SLACK_DEPLOY_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*Deployment to prod*"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":octagonal_sign: *Deployment to prod - FAILED*\nTitle: ${{ steps.get_head_commit_title.outputs.title }}\nAuthor: ${{ github.event.head_commit.author.name }}\nWorkflow run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/>"
